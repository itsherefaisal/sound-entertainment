Problem Statement
SOUND Group aims to develop an Entertainment Website to host and organize a collection of music and videos.
The platform will feature both new and old content across various categories, including regional and English languages.
The system should offer functionalities for administrators to manage content efficiently and for users to discover, rate, and review media.


                Website Requirements

Content Structure:
    Music and videos categorized by Album, Artist, Year, Genre, and Language.
    Separate sections for latest content (5 newest music and 5 newest videos).
    Display new content with a "New" icon or badge.
    Roles and Responsibilities:

Administrator:
    Manage music and video files, including adding, editing, and deleting.
    Create and manage categories (Year, Artist, Album, etc.).
    Oversee user accounts and ensure website details are updated.
User:
    Register with unique credentials and validated personal information.
    Search for music/videos by categories or keywords.
    Add or modify reviews and ratings for content.

User Interface:
    Homepage with an overview of the site and sections for latest music and videos.
    Intuitive menu and search functionality.
    Responsive design using Tailwind CSS.
    Validation and Security:

    Mandatory fields for user registration (Name, Address, Phone Number, Email).
    Robust validations for input fields to prevent invalid or malicious entries.















                        Website Structure
1. Define Website Goals and Objectives
Primary Objective: To provide a platform for hosting and organizing music and videos.
Key Features:
    Allow administrators to manage content efficiently.
    Allow users to discover, rate, and review media.
    Provide a seamless and responsive user experience.
2. Plan the Website Structure
Create a clear structure for pages and components. Here’s a suggested file hierarchy:

Frontend Files
Root Folder:
    index.php – Homepage
    music.php – Music listing page
    videos.php – Video listing page
    search.php – Search results page
    profile.php – User profile page
    signup.php – User registration
    login.php – User login
admin/ – Administrator dashboard
    admin/dashboard.php – Admin homepage
    admin/manage-content.php – Add/Edit/Delete content
    admin/manage-users.php – Manage user accounts
    admin/settings.php – Manage website details
CSS Folder: Tailwind CSS files or compiled output.
JS Folder: JavaScript files for interactivity (e.g., jQuery, custom scripts).
Images Folder: For media thumbnails, banners, etc.
Backend Files
    db.php – Database connection.
    functions.php – Common functions for CRUD operations.
    auth.php – Authentication middleware for access control.

            Database Design

3. Design the User Interface
Use Tailwind CSS for a modern and responsive design. Focus on the following key pages:

Homepage (index.php)
    Hero Section: Introduction about the website.
    Latest Content: Display the 5 newest music and 5 newest videos.
    Search Bar: Quick search for media.
    Responsive Navigation: Links to Music, Videos, Categories, and Login.
Music Page (music.php)
    Filters: Allow filtering by Album, Artist, Year, Genre, and Language.
    List View: Display media items with thumbnails, descriptions, and rating options.
Video Page (videos.php)
    Similar layout to the Music page but focused on video content.
User Profile (profile.php)
    User details, update form, and list of reviews/ratings.
Admin Dashboard (admin/dashboard.php)
    Overview: Total users, total content, latest reviews.
    Admin actions (Add/Edit/Delete content and users).

4. Implement Authentication
Registration (signup.php):
    Inputs: Name, Address, Phone Number, Email, Password.
    Validations: Ensure mandatory fields, strong password, unique email.
    Hash passwords using password_hash() in PHP.

Login (login.php):
    Authenticate users with a database query.
    Use sessions to manage login state.